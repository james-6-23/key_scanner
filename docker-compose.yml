version: '3.8'

services:
  hajimi-king:
    build:
      context: .
      dockerfile: Dockerfile
      cache_from:
        - hajimi-king:latest
    image: hajimi-king:latest
    container_name: hajimi-king
    restart: unless-stopped
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # 环境变量
    env_file:
      - .env
    environment:
      # 覆盖或添加额外的环境变量
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Shanghai
      # 性能优化设置
      - HAJIMI_MAX_WORKERS=10
      - HAJIMI_BATCH_SIZE=10
      - HAJIMI_BATCH_INTERVAL=60
    
    # 数据卷挂载
    volumes:
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
      - queries-cache:/app/data/cache
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=hajimi-king"
    
    # 健康检查
    healthcheck:
      test: ["CMD", "pgrep", "-f", "api_key_scanner"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 网络配置
    networks:
      - hajimi-network
    
    # 安全设置
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    
    # 标签（用于监控和管理）
    labels:
      - "com.hajimi.description=Hajimi King API Key Scanner"
      - "com.hajimi.version=0.0.1-beta"
      - "com.hajimi.maintainer=your-email@example.com"

  # 可选：添加代理服务
  warp-proxy:
    image: cmj2002/warp:latest
    container_name: warp-proxy
    restart: unless-stopped
    ports:
      - "127.0.0.1:1080:1080"
    networks:
      - hajimi-network
    profiles:
      - proxy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

# 网络定义
networks:
  hajimi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 命名卷
volumes:
  queries-cache:
    driver: local