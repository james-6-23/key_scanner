# ============================================
# Hajimi King Configuration Example
# ============================================
# Copy this file to .env and update with your values
# 复制此文件为 .env 并更新为你的配置值

# ============================================
# REQUIRED CONFIGURATION / 必需配置
# ============================================

# GitHub API tokens (comma-separated for rotation)
# GitHub API 令牌（逗号分隔，用于轮换）
# Get tokens at: https://github.com/settings/tokens
GITHUB_TOKENS=ghp_your_token_here_1,ghp_your_token_here_2,ghp_your_token_here_3

# ============================================
# SEARCH CONFIGURATION / 搜索配置
# ============================================

# Search queries file path (relative to DATA_PATH)
# 搜索查询文件路径（相对于 DATA_PATH）
QUERIES_FILE=queries.txt

# Repository age filter in days (only scan repos updated within this period)
# 仓库年龄过滤器（天数）- 只扫描在此期间内更新的仓库
DATE_RANGE_DAYS=730

# File path blacklist (comma-separated, case-insensitive)
# 文件路径黑名单（逗号分隔，不区分大小写）
FILE_PATH_BLACKLIST=readme,docs,doc/,.md,example,sample,tutorial,test,spec,demo,mock

# Model used for key validation
# 用于密钥验证的模型
HAJIMI_CHECK_MODEL=gemini-2.5-flash

# ============================================
# PERFORMANCE CONFIGURATION / 性能配置
# ============================================

# Maximum parallel validation workers
# 最大并行验证工作线程数
HAJIMI_MAX_WORKERS=10

# Batch processing size
# 批处理大小
HAJIMI_BATCH_SIZE=10

# Batch processing interval in seconds
# 批处理间隔（秒）
HAJIMI_BATCH_INTERVAL=60

# ============================================
# NETWORK CONFIGURATION / 网络配置
# ============================================

# Proxy servers (comma-separated, supports authentication)
# 代理服务器（逗号分隔，支持认证）
# Format: http://user:pass@host:port or http://host:port
# 格式：http://user:pass@host:port 或 http://host:port
PROXY=

# Request timeout in seconds
# 请求超时时间（秒）
REQUEST_TIMEOUT=30

# Retry attempts for failed requests
# 失败请求的重试次数
MAX_RETRIES=3

# ============================================
# DATA STORAGE CONFIGURATION / 数据存储配置
# ============================================

# Data directory path (absolute or relative)
# 数据目录路径（绝对或相对路径）
DATA_PATH=./data

# File name prefixes
# 文件名前缀
VALID_KEY_PREFIX=keys/keys_valid_
RATE_LIMITED_KEY_PREFIX=keys/key_429_
KEYS_SEND_PREFIX=keys/keys_send_

# Log file prefixes
# 日志文件前缀
VALID_KEY_DETAIL_PREFIX=logs/keys_valid_detail_
RATE_LIMITED_KEY_DETAIL_PREFIX=logs/key_429_detail_
KEYS_SEND_DETAIL_PREFIX=logs/keys_send_detail_

# Scanned files tracking
# 已扫描文件跟踪
SCANNED_SHAS_FILE=scanned_shas.txt

# ============================================
# EXTERNAL SYNC - GEMINI BALANCER / 外部同步 - GEMINI BALANCER
# ============================================

# Enable Gemini Balancer synchronization
# 启用 Gemini Balancer 同步
GEMINI_BALANCER_SYNC_ENABLED=false

# Gemini Balancer service URL
# Gemini Balancer 服务地址
GEMINI_BALANCER_URL=

# Gemini Balancer authentication token
# Gemini Balancer 认证令牌
GEMINI_BALANCER_AUTH=

# ============================================
# EXTERNAL SYNC - GPT LOAD / 外部同步 - GPT LOAD
# ============================================

# Enable GPT Load Balancer synchronization
# 启用 GPT Load Balancer 同步
GPT_LOAD_SYNC_ENABLED=false

# GPT Load service URL
# GPT Load 服务地址
GPT_LOAD_URL=

# GPT Load authentication token
# GPT Load 认证令牌
GPT_LOAD_AUTH=

# GPT Load group names (comma-separated)
# GPT Load 组名（逗号分隔）
GPT_LOAD_GROUP_NAME=group1,group2,group3

# ============================================
# LOGGING CONFIGURATION / 日志配置
# ============================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# 日志级别
LOG_LEVEL=INFO

# Enable colored console output
# 启用彩色控制台输出
COLORED_LOGS=true

# Log file rotation size in MB
# 日志文件轮转大小（MB）
LOG_ROTATION_SIZE=10

# Number of log files to keep
# 保留的日志文件数量
LOG_BACKUP_COUNT=5

# ============================================
# ADVANCED CONFIGURATION / 高级配置
# ============================================

# Enable debug mode (verbose output)
# 启用调试模式（详细输出）
DEBUG_MODE=false

# Skip SSL verification (not recommended for production)
# 跳过 SSL 验证（生产环境不推荐）
SKIP_SSL_VERIFY=false

# Custom user agent for requests
# 自定义请求的用户代理
USER_AGENT=Hajimi-King/0.0.2-beta

# Rate limit delay between requests (seconds)
# 请求之间的速率限制延迟（秒）
RATE_LIMIT_DELAY=1

# ============================================
# DOCKER SPECIFIC / DOCKER 特定配置
# ============================================

# Container timezone
# 容器时区
TZ=Asia/Shanghai

# Run as user ID (for permission management)
# 运行用户 ID（用于权限管理）
PUID=1000
PGID=1000

# ============================================
# MONITORING & METRICS / 监控和指标
# ============================================

# Enable metrics collection
# 启用指标收集
ENABLE_METRICS=false

# Metrics server port
# 指标服务器端口
METRICS_PORT=9090

# Health check endpoint
# 健康检查端点
HEALTH_CHECK_ENDPOINT=/health

# ============================================
# NOTES / 注意事项
# ============================================
# 1. Never commit .env file to version control
#    永远不要将 .env 文件提交到版本控制
#
# 2. Keep your GitHub tokens secure
#    保护好你的 GitHub 令牌
#
# 3. Use strong authentication for external services
#    为外部服务使用强认证
#
# 4. Regularly rotate your API keys
#    定期轮换你的 API 密钥
#
# 5. Monitor rate limits to avoid bans
#    监控速率限制以避免被封禁
# ============================================
